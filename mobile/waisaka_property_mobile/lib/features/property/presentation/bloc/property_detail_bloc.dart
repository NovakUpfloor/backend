import 'package:flutter_bloc/flutter_bloc.dart'; import 'package:flutter/material.dart'; import 'package:waisaka_property_mobile/features/property/data/models/property.dart'; import 'package:waisaka_property_mobile/features/property/data/repositories/property_repository.dart'; part 'property_detail_event.dart'; part 'property_detail_state.dart'; class PropertyDetailBloc extends Bloc<PropertyDetailEvent, PropertyDetailState> { final PropertyRepository _repository; PropertyDetailBloc({required PropertyRepository repository}) : _repository = repository, super(PropertyDetailInitial()) { on<FetchPropertyDetails>(_onFetchDetails); } Future<void> _onFetchDetails(FetchPropertyDetails event, Emitter<PropertyDetailState> emit) async { emit(PropertyDetailLoading()); try { final property = await _repository.fetchPropertyById(event.propertyId); emit(PropertyDetailLoadSuccess(property: property)); } catch (e) { emit(PropertyDetailLoadFailure(error: e.toString())); } } }
