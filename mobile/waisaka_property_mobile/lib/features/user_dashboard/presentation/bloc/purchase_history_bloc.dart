import 'package:flutter_bloc/flutter_bloc.dart'; import 'package:flutter/material.dart'; import 'package:waisaka_property_mobile/features/user_dashboard/data/models/purchase_history.dart'; import 'package:waisaka_property_mobile/features/user_dashboard/data/repositories/user_dashboard_repository.dart'; part 'purchase_history_event.dart'; part 'purchase_history_state.dart'; class PurchaseHistoryBloc extends Bloc<PurchaseHistoryEvent, PurchaseHistoryState> { final UserDashboardRepository _repository; PurchaseHistoryBloc({required UserDashboardRepository repository}) : _repository = repository, super(PurchaseHistoryInitial()) { on<FetchPurchaseHistory>(_onFetch); } Future<void> _onFetch(FetchPurchaseHistory event, Emitter<PurchaseHistoryState> emit) async { emit(PurchaseHistoryLoading()); try { final history = await _repository.fetchPurchaseHistory(); emit(PurchaseHistoryLoadSuccess(history: history)); } catch (e) { emit(PurchaseHistoryLoadFailure(error: e.toString())); } } }
